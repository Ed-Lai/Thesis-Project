/* Enclave.edl - Top EDL file. */

enclave {
    
    include "user_types.h" /* buffer_t */

    /* Import ECALL/OCALL from sub-directory EDLs.
     *  [from]: specifies the location of EDL file. 
     *  [import]: specifies the functions to import, 
     *  [*]: implies to import all functions.
     */

    from "Edger8rSyntax/Types.edl" import *;
    from "Edger8rSyntax/Pointers.edl" import *;
    from "Edger8rSyntax/Arrays.edl" import *;
    from "Edger8rSyntax/Functions.edl" import *;

    from "TrustedLibrary/Libc.edl" import *;
    from "TrustedLibrary/Libcxx.edl" import ecall_exception, ecall_map;
    from "TrustedLibrary/Thread.edl" import *;


    /* 
     * ocall_print_string - invokes OCALL to display string buffer inside the enclave.
     *  [in]: copy the string buffer to App outside.
     *  [string]: specifies 'str' is a NULL terminated buffer.
     */

    trusted {
        public sgx_status_t ecall_call_aes([in, size = ecBytesLen] uint8_t* ecBytes, uint32_t ecBytesLen, [in, size = userIDLength] uint8_t* userIDBytes, uint32_t userIDLength);
        public sgx_status_t seal([in, size=data_size] uint8_t* data, uint32_t data_size, [out, size=sealed_size] uint8_t* sealed_data, uint32_t sealed_size);
        public sgx_status_t unseal([in, size=sealed_size] uint8_t* sealed_data, uint32_t sealed_size,[out, size=unsealed_size] uint8_t* unsealed_data, uint32_t unsealed_size);
        public uint32_t ecall_calc_sealed_size(uint32_t data_size);
    };

    untrusted {
        void ocall_print_string([in, string] const char *str);
    };
 
};
